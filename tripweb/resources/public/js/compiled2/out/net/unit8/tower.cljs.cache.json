["^ ","~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$net.unit8.tower","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^8","^8","~$utils","~$net.unit8.tower.utils","^:","^:","~$net","~$clojure.browser.net","^<","^<"],"~:uses",null,"~:defs",["^ ","~$t",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","~:line",116,"~:column",7,"~:end-line",116,"~:end-column",8,"~:arglists",["~#list",["~$quote",["^G",[["~$loc","~$config","~$k-or-ks","~$&","~$fmt-str-args"]]]]],"~:doc","Like `translate` but uses a thread-local translation scope.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",3,"~:method-params",[["^G",["^I","^J","^K","^L"]]],"^F",["^G",[["^I","^J","^K","~$&","^L"]]],"~:arglists-meta",["^G",[null]]]],"^3","~$net.unit8.tower/t","^O",true,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",8,"^N",["^ ","^O",true,"^P",3,"^Q",[["^G",["^I","^J","^K","^L"]]],"^F",["^G",[["^I","^J","^K","~$&","^L"]]],"^R",["^G",[null]]],"^Q",[["^G",["^I","^J","^K","^L"]]],"~:protocol-impl",null,"^R",["^G",[null]],"^C",1,"^B",116,"^D",116,"^P",3,"~:fn-var",true,"^F",["^G",[["^I","^J","^K","~$&","^L"]]],"^M","Like `translate` but uses a thread-local translation scope."],"~$compile-dict-path",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",24,"^C",8,"^D",24,"^E",25,"~:private",true,"^F",["^G",["^H",["^G",[["~$raw-dict","~$path"]]]]],"^M","[:locale :ns1 ... :nsN unscoped-key<decorator> translation] =>\n  {:ns1.<...>.nsN/unscoped-key {:locale (f translation decorator)}}"],"^W",true,"^3","~$net.unit8.tower/compile-dict-path","^O",false,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",25,"^Q",["^G",[["^X","^Y"]]],"^T",null,"^R",["^G",[null,null]],"^C",1,"^B",24,"^D",24,"^P",2,"^U",true,"^F",["^G",["^H",["^G",[["^X","^Y"]]]]],"^M","[:locale :ns1 ... :nsN unscoped-key<decorator> translation] =>\n  {:ns1.<...>.nsN/unscoped-key {:locale (f translation decorator)}}"],"~$inherit-parent-trs",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",55,"^C",8,"^D",55,"^E",26,"^W",true,"^F",["^G",["^H",["^G",[["~$dict"]]]]],"^M","Merges each locale's translations over its parent locale translations."],"^W",true,"^3","~$net.unit8.tower/inherit-parent-trs","^O",false,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",26,"^Q",["^G",[["^10"]]],"^T",null,"^R",["^G",[null,null]],"^C",1,"^B",55,"^D",55,"^P",1,"^U",true,"^F",["^G",["^H",["^G",[["^10"]]]]],"^M","Merges each locale's translations over its parent locale translations."],"~$fallback-locale",["^ ","^3","~$net.unit8.tower/fallback-locale","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",15,"^C",1,"^D",15,"^E",21,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",15,"^C",6,"^D",15,"^E",21],"^M","Global fallback dev-mode?."],"~$compile-dict-inner",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",66,"^C",7,"^D",66,"^E",25,"^F",["^G",["^H",["^G",[["~$key","^X"]]]]]],"^3","~$net.unit8.tower/compile-dict-inner","^O",false,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",25,"^Q",["^G",[["^15","^X"]]],"^T",null,"^R",["^G",[null,null]],"^C",1,"^B",66,"^D",66,"^P",2,"^U",true,"^F",["^G",["^H",["^G",[["^15","^X"]]]]]],"~$compile-dict",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",74,"^C",7,"^D",74,"^E",19,"^F",["^G",["^H",["^G",[["^X","~$dev-mode?"]]]]]],"^3","~$net.unit8.tower/compile-dict","^O",false,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",19,"^Q",["^G",[["^X","^18"]]],"^T",null,"^R",["^G",[null,null]],"^C",1,"^B",74,"^D",74,"^P",2,"^U",true,"^F",["^G",["^H",["^G",[["^X","^18"]]]]]],"~$*tscope*",["^ ","^3","~$net.unit8.tower/*tscope*","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",20,"^C",1,"^D",20,"^E",24,"~:dynamic",true,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",20,"^C",16,"^D",20,"^E",24,"^1<",true]],"~$scoped",["^ ","^3","~$net.unit8.tower/scoped","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",17,"^C",1,"^D",17,"^E",12,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",17,"^C",6,"^D",17,"^E",12],"^M","Merges scope keywords: (scope :a.b :c/d :e) => :a.b.c.d/e"],"^18",["^ ","^3","~$net.unit8.tower/dev-mode?","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",14,"^C",1,"^D",14,"^E",15,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",14,"^C",6,"^D",14,"^E",15],"^M","Global fallback dev-mode?."],"~$dict-cache",["^ ","^3","~$net.unit8.tower/dict-cache","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",21,"^C",1,"^D",21,"^E",26,"^W",true,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",21,"^C",16,"^D",21,"^E",26,"^W",true]],"~$fmt-str",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",10,"^C",7,"^D",10,"^E",14,"^F",["^G",["^H",["^G",[["^I","~$fmt","~$&","~$args"]]]]],"^M","Like clojure.core/format but takes a locale.","^N",["^ ","^O",true,"^P",2,"^Q",[["^G",["^I","^1C","^1D"]]],"^F",["^G",[["^I","^1C","~$&","^1D"]]],"^R",["^G",[null]]]],"^3","~$net.unit8.tower/fmt-str","^O",true,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",14,"^N",["^ ","^O",true,"^P",2,"^Q",[["^G",["^I","^1C","^1D"]]],"^F",["^G",[["^I","^1C","~$&","^1D"]]],"^R",["^G",[null]]],"^Q",[["^G",["^I","^1C","^1D"]]],"^T",null,"^R",["^G",[null]],"^C",1,"^B",10,"^D",10,"^P",2,"^U",true,"^F",["^G",[["^I","^1C","~$&","^1D"]]],"^M","Like clojure.core/format but takes a locale."],"~$locale-key",["^ ","^3","~$net.unit8.tower/locale-key","^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",7,"^C",1,"^D",7,"^E",16,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",7,"^C",6,"^D",7,"^E",16],"^M","Returns locale keyword for given Locale object or locale keyword."],"~$translate",["^ ","^?",null,"^@",["^ ","^A","e:\\DEV\\clojure\\trusty\\tripweb\\resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^B",86,"^C",7,"^D",86,"^E",16,"^F",["^G",["^H",["^G",[["^I","^J","~$scope","^K","~$&","~$fmt-args"]]]]],"^N",["^ ","^O",true,"^P",4,"^Q",[["^G",["^I","^J","^1I","^K","^1J"]]],"^F",["^G",[["^I","^J","^1I","^K","~$&","^1J"]]],"^R",["^G",[null]]]],"^3","~$net.unit8.tower/translate","^O",true,"^A","resources\\public\\js\\compiled2\\out\\net\\unit8\\tower.cljs","^E",16,"^N",["^ ","^O",true,"^P",4,"^Q",[["^G",["^I","^J","^1I","^K","^1J"]]],"^F",["^G",[["^I","^J","^1I","^K","~$&","^1J"]]],"^R",["^G",[null]]],"^Q",[["^G",["^I","^J","^1I","^K","^1J"]]],"^T",null,"^R",["^G",[null]],"^C",1,"^B",86,"^D",86,"^P",4,"^U",true,"^F",["^G",[["^I","^J","^1I","^K","~$&","^1J"]]]]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^2",["~:fmt-fn","~:ks","~:locale","~:dictionary","~:dev-mode?","~:scope","~:default-locale","~:en","~:inline?","~:log-missing-translation-fn","~:root-scope","~:missing","~:keywordize-keys","~:fallback-locale","~:net.unit8.tower/scope-var"]],"~:order",["^1V","^1W","^1[","^1S","^1R","^20","^1U","^1X","^1Y","^1O","^1Q","^1T","^1P","^1Z","^21"]],"^M",null]